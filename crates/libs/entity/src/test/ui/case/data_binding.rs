//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;
use sea_orm::EntityTrait;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, EnumIter, DeriveActiveEnum, Deserialize, Serialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "String(Some(15))",
    enum_name = "data_binding_kind"
)]
pub enum DataBindingKind {
    #[sea_orm(string_value = "Data")]
    Data,
    #[sea_orm(string_value = "Field")]
    Field,
}

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Deserialize, Serialize)]
#[sea_orm(table_name = "data_binding")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: Uuid,
    pub key: String,
    pub value: String,
    pub kind: DataBindingKind,
    pub block_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::case_block::Entity",
        from = "Column::BlockId",
        to = "super::case_block::Column::Id"
    )]
    CaseBlock,
}

impl Related<super::case_block::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CaseBlock.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
