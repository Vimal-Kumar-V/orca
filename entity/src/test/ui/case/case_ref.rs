//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;
use sea_orm::EntityTrait;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Deserialize, Serialize)]
#[sea_orm(table_name = "case_block")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub block_id: Uuid,
    #[sea_orm(primary_key)]
    pub ref_block_id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::case_block::Entity",
        from = "Column::BlockId",
        to = "super::case_block::Column::Id"
    )]
    CaseBlock,
}

impl Related<super::case_block::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CaseBlock.def()
    }
}


impl ActiveModelBehavior for ActiveModel {}
